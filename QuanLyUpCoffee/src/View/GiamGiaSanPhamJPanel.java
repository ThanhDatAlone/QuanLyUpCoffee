/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Services.SerGiamGia;
import Dao.ChiTietGiamGiaDao;
import Dao.DaoGiamGia;
import Dao.NhanVienDAO;
import Dao.SanPhamDao;
import Model.GiamGiaChiTiet;
import Model.SanPham;
import Model.GiamGia;
import Helper.Auth;
import Helper.MsgBox;
import Helper.Xdate;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author HP
 */
public class GiamGiaSanPhamJPanel extends javax.swing.JPanel {

    SanPhamDao daoSP = new SanPhamDao();
    DaoGiamGia daoGG = new DaoGiamGia();
    NhanVienDAO daonv = new NhanVienDAO();
    DefaultTableModel model = new DefaultTableModel();
    int maGiamGia;
    Date ngaybd;

    DefaultTableModel giamgiachitiet = new DefaultTableModel();
    int row;

    public GiamGiaSanPhamJPanel() {
        initComponents();
        model = (DefaultTableModel) tblSanphamgiamgia.getModel();
        fillToTableSPGD();
        giamgiachitiet = (DefaultTableModel) tblSanPhamgiamchitiet.getModel();
        jPanel2.setVisible(false);
//        fillcomboboxEvent();
        authen();

    }
    public void authen(){
        if(Auth.isManager() == false){
            btnThem.setEnabled(false);
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
            btngiahan.setEnabled(false);
            jButton1.setEnabled(false);
        }
    }
    private void fillcomboboxEvent() {
        DefaultComboBoxModel cbomodel = (DefaultComboBoxModel) cbohansukien.getModel();
        cbomodel.removeAllElements();
        List<GiamGia> list = daoGG.selectALLL();
        for (GiamGia x : list) {
            cbomodel.addElement(checkTGian(x.getNgayBD(), x.getNgayKT()) ? "còn hạn" : "hết hạn");
        }
    }

    public int getMaGiamGia() {
        return maGiamGia;
    }

    public void setMaGiamGia(int maGiamGia) {
        this.maGiamGia = maGiamGia;
    }

    public Date getNgaybd() {
        return ngaybd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        mmxoa = new javax.swing.JMenuItem();
        mmsua = new javax.swing.JMenuItem();
        mmtimkiemhien = new javax.swing.JMenuItem();
        mmtimkieman = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPhamgiamchitiet = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanphamgiamgia = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtTiemKiem = new javax.swing.JTextField();
        txtdate1 = new com.toedter.calendar.JDateChooser();
        txtdate2 = new com.toedter.calendar.JDateChooser();
        btnThem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btngiahan = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSukien = new javax.swing.JTextArea();
        btnSua = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txttim = new javax.swing.JTextField();
        cbohansukien = new javax.swing.JComboBox<>();
        lbltenkiendienra = new javax.swing.JLabel();

        mmxoa.setMnemonic('x');
        mmxoa.setText("xóa sản phẩm");
        mmxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmxoaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mmxoa);

        mmsua.setText("sửa giảm giá");
        mmsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmsuaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mmsua);

        mmtimkiemhien.setText("tìm kiếm");
        mmtimkiemhien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmtimkiemhienActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mmtimkiemhien);

        mmtimkieman.setText("ẩn tìm kiếm");
        mmtimkieman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmtimkiemanActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mmtimkieman);

        setBackground(new java.awt.Color(241, 241, 241));

        tblSanPhamgiamchitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Giiá", "Giảm (%)", "Tiền sau khi giảm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamgiamchitiet.setRowHeight(18);
        tblSanPhamgiamchitiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSanPhamgiamchitietMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPhamgiamchitiet);

        tblSanphamgiamgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sự kiện", "Tên nhân viên", "Ngày bắt đầu", "Ngày kết thúc", "Hoạt động"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanphamgiamgia.setRowHeight(18);
        tblSanphamgiamgia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanphamgiamgiaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSanphamgiamgiaMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanphamgiamgia);
        if (tblSanphamgiamgia.getColumnModel().getColumnCount() > 0) {
            tblSanphamgiamgia.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblSanphamgiamgia.getColumnModel().getColumn(0).setMaxWidth(60);
            tblSanphamgiamgia.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblSanphamgiamgia.getColumnModel().getColumn(1).setMaxWidth(300);
        }

        jPanel1.setBackground(new java.awt.Color(241, 241, 241));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tìm kiếm(Tên)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtTiemKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTiemKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTiemKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtTiemKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Khoảng");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("đến");

        btngiahan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btngiahan.setText("Gia hạn");
        btngiahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngiahanActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Nhân viên");

        lblTenNhanVien.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTenNhanVien.setText("..................");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Sự kiện");

        txtSukien.setColumns(20);
        txtSukien.setLineWrap(true);
        txtSukien.setRows(5);
        txtSukien.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtSukien);

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(241, 241, 241));

        txttim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttimKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(44, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txttim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        cbohansukien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "còn hạn", "hết hạn" }));
        cbohansukien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbohansukienItemStateChanged(evt);
            }
        });

        lbltenkiendienra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbltenkiendienra.setText("Sự kiện còn thời gian");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtdate2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btngiahan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbohansukien, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbltenkiendienra))
                                .addGap(91, 91, 91)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(377, 377, 377))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSua, btnThem, btnXoa, btngiahan, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbltenkiendienra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbohansukien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btngiahan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(txtdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(lblTenNhanVien)
                                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(txtdate2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSua, btnThem, btnXoa, btngiahan, jButton1});

    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (check() && check2() && checkNull()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblSanphamgiamgiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanphamgiamgiaMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            row = tblSanphamgiamgia.getSelectedRow();
            maGiamGia = Integer.parseInt(tblSanphamgiamgia.getValueAt(row, 0).toString());
            ngaybd = txtdate1.getDate();
            new ThemSanPhamGiamGiaJDialog(null, true, maGiamGia, ngaybd).setVisible(true);
            filltableChitiet();
        } else {
            try {
                filltableChitiet();
                row = tblSanphamgiamgia.getSelectedRow();
                String magg = tblSanphamgiamgia.getValueAt(row, 0).toString();
                GiamGia gg = daoGG.selectById(magg);
                setform(gg);
                UpdateStatus();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_tblSanphamgiamgiaMouseClicked

    private void tblSanphamgiamgiaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanphamgiamgiaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanphamgiamgiaMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtTiemKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiemKiemKeyReleased
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_txtTiemKiemKeyReleased

    private void btngiahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngiahanActionPerformed
        // TODO add your handling code here:
        updateDate();
    }//GEN-LAST:event_btngiahanActionPerformed

    private void tblSanPhamgiamchitietMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamgiamchitietMouseReleased
        // TODO add your handling code here:
        int x = tblSanPhamgiamchitiet.rowAtPoint(evt.getPoint());
        if (x >= 0 && x < tblSanPhamgiamchitiet.getRowCount()) {
            tblSanPhamgiamchitiet.setRowSelectionInterval(x, x);
        } else {
            tblSanPhamgiamchitiet.clearSelection();
        }
        int rowindex = tblSanPhamgiamchitiet.getSelectedRow();
        if (rowindex < 0) {
            return;
        }
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JTable) {
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblSanPhamgiamchitietMouseReleased

    private void mmxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmxoaActionPerformed
        // TODO add your handling code here:
        try {
            row = tblSanPhamgiamchitiet.getSelectedRow();
            if (MsgBox.confirm(this, "bạn có muốn xóa giảm giá sản phẩm này ?")) {

//                for (int i = 0; i < tblSanPhamgiamchitiet.getRowCount(); i++) {
                String idsanpham = daoSP.selectNameByID(
                        tblSanPhamgiamchitiet.getValueAt(row, 0).toString());
                Daoct.delete(idsanpham);
                System.out.println(maGiamGia + "    là mã mã sản phẩm đã giảm  ");
                filltableChitiet();
                MsgBox.alert(this, "đã xóa sản phẩm này");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_mmxoaActionPerformed

    private void mmsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmsuaActionPerformed
        // TODO add your handling code here:
        updateGiamGia();
    }//GEN-LAST:event_mmsuaActionPerformed

    private void mmtimkiemhienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmtimkiemhienActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(true);
    }//GEN-LAST:event_mmtimkiemhienActionPerformed

    private void mmtimkiemanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmtimkiemanActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(false);
    }//GEN-LAST:event_mmtimkiemanActionPerformed

    private void txttimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimKeyReleased
        // TODO add your handling code here:
        TableRowSorter<DefaultTableModel> table = new TableRowSorter<>(giamgiachitiet);
        tblSanPhamgiamchitiet.setRowSorter(table);
        table.setRowFilter(javax.swing.RowFilter.regexFilter(txttim.getText()));
    }//GEN-LAST:event_txttimKeyReleased

    private void cbohansukienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbohansukienItemStateChanged
        // TODO add your handling code here:
        fillToTableSPGD();
    }//GEN-LAST:event_cbohansukienItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btngiahan;
    private javax.swing.JComboBox<String> cbohansukien;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lbltenkiendienra;
    private javax.swing.JMenuItem mmsua;
    private javax.swing.JMenuItem mmtimkieman;
    private javax.swing.JMenuItem mmtimkiemhien;
    private javax.swing.JMenuItem mmxoa;
    private javax.swing.JTable tblSanPhamgiamchitiet;
    private javax.swing.JTable tblSanphamgiamgia;
    private javax.swing.JTextArea txtSukien;
    private javax.swing.JTextField txtTiemKiem;
    private com.toedter.calendar.JDateChooser txtdate1;
    private com.toedter.calendar.JDateChooser txtdate2;
    private javax.swing.JTextField txttim;
    // End of variables declaration//GEN-END:variables
    ChiTietGiamGiaDao Daoct = new ChiTietGiamGiaDao();

    private void fillToTableSPGD() {
        model.setRowCount(0);
        try {

            List<GiamGia> list = daoGG.selectAll();
            for (GiamGia g : list) {

                switch (cbohansukien.getSelectedItem().toString()) {
                    case "còn hạn":
                        if (checkTGian(g.getNgayBD(), g.getNgayKT()) == true) {
                            String ten = daonv.selectById(g.getIdnhanvien()).getTenNV();
                            model.addRow(new Object[]{g.getId_GiamGia(), g.getTenSK(),
                                ten, g.getNgayBD(), g.getNgayKT(),
                                checkTGian(g.getNgayBD(), g.getNgayKT()) ? "còn hạn" : "hết hạn"});
                            lbltenkiendienra.setText("Sự kiện còn thời gian");
                        }
                        break;
                    case "hết hạn":
                        if (checkTGian(g.getNgayBD(), g.getNgayKT()) == false) {
                            String ten = daonv.selectById(g.getIdnhanvien()).getTenNV();
                            model.addRow(new Object[]{g.getId_GiamGia(), g.getTenSK(),
                                ten, g.getNgayBD(), g.getNgayKT(),
                                checkTGian(g.getNgayBD(), g.getNgayKT()) ? "còn hạn" : "hết hạn"});
                            lbltenkiendienra.setText("Sự kiện  thời gian");

                        }
                        break;
                }
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi hiển thị");
            e.printStackTrace();
        }
    }

    private boolean checkTGian(Date ngaybd, Date ngaykt) {
        SimpleDateFormat simple = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        String datenow = simple.format(date);
        date = Xdate.toDate(datenow, "yyyy-MM-dd");
        if (date.after(ngaykt)) {
            return false;
        } //        else if (date.before(ngaybd)) {
        //            return false;
        else;
        return true;
    }

    Services.SerGiamGia inserts = new SerGiamGia();
    Services.SerGiamGia updates = new SerGiamGia();
    Services.SerGiamGia deletes = new SerGiamGia();

    private void insert() {
        try {
            if (MsgBox.confirm(this, "bạn có muốn thêm sự kiện này ?")) {
                inserts.insert(CreateData());
                this.fillToTableSPGD();
                MsgBox.alert(this, "Thêm dữ sự kiện thành công");
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm thất bại");
            e.printStackTrace();
        }
    }

    SimpleDateFormat format = new SimpleDateFormat("yyy-MM-dd");

    private GiamGia getFrom() {
        GiamGia gg = new GiamGia();

        int rows = tblSanphamgiamgia.getSelectedRow();
        gg.setId_GiamGia(Integer.parseInt(tblSanphamgiamgia.getValueAt(rows, 0).toString()));
        gg.setTenSK(txtSukien.getText());
        gg.setIdnhanvien(Auth.user.getId_Nhanvien());
        gg.setNgayBD(Xdate.toDate(Xdate.toString(txtdate1.getDate(), "yyyy-MM-dd"), "yyy-MM-dd"));
        gg.setNgayKT(Xdate.toDate(Xdate.toString(txtdate2.getDate(), "yyyy-MM-dd"), "yyy-MM-dd"));
        return gg;
    }

    private GiamGia CreateData() {
        GiamGia gg = new GiamGia();

        gg.setId_GiamGia(gg.getId_GiamGia());
        gg.setTenSK(txtSukien.getText());
        gg.setIdnhanvien(Auth.user.getId_Nhanvien());
        gg.setNgayBD(Xdate.toDate(Xdate.toString(txtdate1.getDate(), "yyyy-MM-dd"), "yyy-MM-dd"));
        gg.setNgayKT(Xdate.toDate(Xdate.toString(txtdate2.getDate(), "yyyy-MM-dd"), "yyy-MM-dd"));
        return gg;
    }

    private void filltableChitiet() {
        giamgiachitiet.setRowCount(0);
        List<GiamGiaChiTiet> list
                = Daoct.selectbyEvent(tblSanphamgiamgia.getValueAt(tblSanphamgiamgia.getSelectedRow(), 0).toString());
        for (GiamGiaChiTiet x : list) {
            giamgiachitiet.addRow(new Object[]{daoSP.selectnameSP(x.getidSP()),
                daoSP.selectPrice(x.getidSP()),
                x.getPhantramgiam(), SanPhamGiamGia(x.getidSP(), daoSP.selectPrice(x.getidSP()))});
        }
    }

    private void setform(GiamGia gg) {

        txtSukien.setText(tblSanphamgiamgia.getValueAt(row, 1).toString());
        lblTenNhanVien.setText(tblSanphamgiamgia.getValueAt(row, 2).toString());

        txtdate1.setDate(gg.getNgayBD());
//        System.out.println(gg.getNgayBD());
        txtdate2.setDate(gg.getNgayKT());
    }

    private void clear() {
        txtdate1.setDate(null);
        txtdate2.setDate(null);
        txtSukien.setText(null);
//        lblTenNhanVien.setText(Auth.user.getTenNV());
        row = -1;
        UpdateStatus();
    }

    private void delete() {
        row = tblSanphamgiamgia.getSelectedRow();
        if (MsgBox.confirm(this, "bạn có muốn xóa sự kiện này ?")) {
            if (row == -1) {
                MsgBox.alert(this, "không tìm thấy dòng dữ liệu để xóa");
                return;
            } else {
                try {

                    String sukien = tblSanphamgiamgia.getValueAt(row, 0).toString();
                    daoGG.delete(sukien);
                    fillToTableSPGD();
                    clear();
                    MsgBox.alert(this, "xóa thành công");
                } catch (Exception e) {
                    MsgBox.alert(this, "đang có sản phẩm đựơc giảm giá trong sự kiện này");
                }

            }
        } else;
    }

    // sửa sự kiện
    private void update() {
        try {
            if (MsgBox.confirm(this, "bạn có muốn  cập nhập tên sự kiện ?")) {
                GiamGia gg = getFrom();
                daoGG.update(gg);
                fillToTableSPGD();
                clear();
                MsgBox.alert(this, "cập nhập sự kiện thành công");
                System.out.println(gg);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void search() {
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(model);
        tblSanphamgiamgia.setRowSorter(search);
        search.setRowFilter(javax.swing.RowFilter.regexFilter(txtTiemKiem.getText()));
    }

    private void UpdateStatus() {
        boolean edit = (row >= 0);
        boolean fist = (row == 0);
        boolean last = (row == tblSanphamgiamgia.getRowCount() - 1);
        //
        btnThem.setEnabled(!edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);
        btngiahan.setEnabled(edit);
        txtdate1.setEnabled(!edit);

    }

    private void updateDate() {
        try {
            row = tblSanphamgiamgia.getSelectedRow();
            if (MsgBox.confirm(this, "bạn có muốn gia hạn sự kiện này ?")) {
                if (row == -1) {
                    MsgBox.alert(this, "không tìm thấy sự kiện cần gia hạn");
                    return;
                } else {
                    GiamGia gg = getFrom();
                    daoGG.updateDateFinsh(gg);
                    fillToTableSPGD();
                    clear();
                    MsgBox.alert(this, "gia hạn giảm giá thành công");
                    System.out.println(gg.getNgayKT());
                }
            } else;

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public int SanPhamGiamGia(String masp, int gia) {
        GiamGiaChiTiet ggct = Daoct.selectbyIDSP(masp);
        if (ggct == null) {
            return 0;
        }
        GiamGia gg = daoGG.selectByIdss(ggct.getidgiamgia());
        if (gg == null) {
            return 0;
        }
        try {
            SimpleDateFormat simple = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            String datenow = simple.format(date);
            date = Xdate.toDate(datenow, "yyyy-MM-dd");
            date = Xdate.toDate(datenow, "yyyy-MM-dd");
            Date datekt = gg.getNgayKT();
            Date datebd = gg.getNgayBD();

            float tiengiam = (float) gia - (((float) ggct.getPhantramgiam() / 100) * gia);
            //System.out.println((float) gia - ((float) ggct.getPhantramgiam()/100) * gia);
            int tiengiamint = (int) tiengiam;
            // System.out.println(tiengiamint);
            String a = tiengiamint + "";
            //System.out.println(a.length());
            if (a.length() == 4) {
                int soThu1 = Integer.parseInt(a.charAt(1) + "");
                if (soThu1 < 5) {
                    //System.out.println("heelo");
                    a = a.substring(0, 1);
                    //System.out.println(a);
                    return Integer.parseInt(a + "000");
                } else {
                    a = a.substring(0, 1);
                    tiengiamint = Integer.parseInt(a + "000");
                    return (int) tiengiamint + 1000;
                }

            } else if (tiengiam == 0) {
                return 0;
            } else {
//                System.out.println("heelosssss");
                int soThu2 = Integer.parseInt(a.charAt(2) + "");
                if (soThu2 < 5) {
                    a = a.substring(0, 2);;
                    return Integer.parseInt(a + "000");
                } else {
                    a = a.substring(0, 2);
                    tiengiamint = Integer.parseInt(a + "000");
                    return (int) tiengiamint + 1000;
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return 0;
    }

    /// sửa phần trăm giảm giá\
    private void updateGiamGia() {
        try {
            if (MsgBox.confirm(this, "bạn muốn cập nhập lại giảm giá của sản phẩm ?")) {
                int rows = tblSanPhamgiamchitiet.getSelectedRow();
                int cotgiamgia = Integer.parseInt(tblSanPhamgiamchitiet.getValueAt(rows, 2).toString());
                if (cotgiamgia < 0 || cotgiamgia > 100) {
                    MsgBox.alert(this, "giảm không được nhập lớn hơn 0 hoặc 100");
                    return;
                }
                for (int i = 0; i < tblSanPhamgiamchitiet.getRowCount(); i++) {

                    int phantram = Integer.parseInt(tblSanPhamgiamchitiet.getValueAt(i, 2).toString());
                    String idsanpham = daoSP.selectNameByID(tblSanPhamgiamchitiet.getValueAt(i, 0).toString());
                    Daoct.update(phantram, idsanpham);
                    System.out.println("adsddddddddd" + phantram + "ddddd" + idsanpham);
                }

                MsgBox.alert(this, "Đã cập nhập lại mức giảm giá thành công");
                filltableChitiet();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean check() {
        Date a = txtdate1.getDate();
        Date b = txtdate2.getDate();
        if (a.getTime() > b.getTime()) {
            MsgBox.alert(this, "Ngày trước phải nhỏ hơn ngày sau");
            return false;
        }
        return true;
    }

    private boolean check2() {
       
        if (daoGG.selectByIdSK(txtSukien.getText()) == null) {
            return true;
        }
         else {
            MsgBox.alert(this, "Tên sự kiện không được trùng");
            return false;
        }
    }

    private boolean checkNull() {
        if (txtSukien.getText().isEmpty() == true) {
            MsgBox.alert(this, "Không được để trống tên sự kiện!!!");
            return false;
        }
        return true;
    }
}
