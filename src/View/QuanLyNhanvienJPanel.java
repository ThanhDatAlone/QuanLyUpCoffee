package View;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Services.SerNhanVien;
import Dao.NhanVienDAO;
import Model.NhanVien;
import Helper.Auth;
import Helper.Xdate;
import Helper.Ximage;
import Helper.JDBCHeper;
import static java.awt.Color.white;
import java.io.File;
import java.sql.Array;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;

/**
 *
 * @author HP
 */
public class QuanLyNhanvienJPanel extends javax.swing.JPanel {

    NhanVienDAO dao = new NhanVienDAO();
    int row = -1;
    JFileChooser fileChooser = new JFileChooser("C:\\Users\\admin\\Desktop\\DuAn1-QuanLyUpCofffee\\logos");

    /**
     * Creates new form QuanLyNhanvienJPanel
     */
    public QuanLyNhanvienJPanel() {
        initComponents();
        init();
        authen();
        txtMaNV.setEditable(false);
        rdoLamviec.setSelected(true);
    }

    public void authen() {
        if (Auth.isManager()) {
            btnThem.setEnabled(true);
            btnSua.setEnabled(true);
            btnXoa.setEnabled(true);
            tbnLamMoi.setEnabled(true);
        } else {
            btnThem.setEnabled(false);
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
            tbnLamMoi.setEnabled(false);
            btnThem.setVisible(false);
            btnSua.setVisible(false);
            tbnLamMoi.setVisible(false);
            btnXoa.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jDateNgaysinh = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiachi = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        txtTaikhoan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMatkhau = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        rdoQuanly = new javax.swing.JRadioButton();
        rdoNhanvien = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        rdoNghiviec = new javax.swing.JRadioButton();
        rdoLamviec = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        tbnLamMoi = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVienhd = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblNhanVienkhd = new javax.swing.JTable();

        setBackground(new java.awt.Color(241, 241, 241));

        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Mã NV");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tên NV");

        txtTenNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenNVKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setSelected(true);
        rdoNu.setText("Nữ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ngày sinh");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("SĐT");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Địa chỉ");

        txtDiachi.setColumns(20);
        txtDiachi.setRows(5);
        jScrollPane2.setViewportView(txtDiachi);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Tài khoản");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Mật khẩu");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Vai trò");

        buttonGroup2.add(rdoQuanly);
        rdoQuanly.setText("Quản lý");

        buttonGroup2.add(rdoNhanvien);
        rdoNhanvien.setSelected(true);
        rdoNhanvien.setText("Nhân viên");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Trạng thái");

        buttonGroup3.add(rdoNghiviec);
        rdoNghiviec.setText("Nghỉ việc");

        buttonGroup3.add(rdoLamviec);
        rdoLamviec.setSelected(true);
        rdoLamviec.setText("Làm việc");

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        tbnLamMoi.setBackground(new java.awt.Color(255, 255, 255));
        tbnLamMoi.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tbnLamMoi.setText("Làm mới");
        tbnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnLamMoiActionPerformed(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(255, 255, 255));
        btnStart.setText("|<");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(255, 255, 255));
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnnext.setBackground(new java.awt.Color(255, 255, 255));
        btnnext.setText(">>");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(255, 255, 255));
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        tblNhanVienhd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV ", "Tên ", "Giới tính", "Ngày sinh", "Địa chỉ", "SDT", "Email", "Vai trò"
            }
        ));
        tblNhanVienhd.setGridColor(new java.awt.Color(0, 0, 0));
        tblNhanVienhd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienhdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVienhd);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1229, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nhân viên hoạt động", jPanel2);

        tblNhanVienkhd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV ", "Tên ", "Giới tính", "Ngày sinh", "Địa chỉ", "SDT", "Email", "Vai trò"
            }
        ));
        tblNhanVienkhd.setGridColor(new java.awt.Color(0, 0, 0));
        tblNhanVienkhd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienkhdMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblNhanVienkhd);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1229, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nhân viên không hoạt dộng", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(25, 25, 25)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdoNam)
                                        .addGap(29, 29, 29)
                                        .addComponent(rdoNu))
                                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jDateNgaysinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTaikhoan)
                                    .addComponent(txtMatkhau)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdoQuanly)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdoLamviec)
                                            .addComponent(rdoNhanvien))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(btnStart))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoNghiviec)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnPrev)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnnext)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLast)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tbnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(rdoNam)
                                    .addComponent(rdoNu)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jDateNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(tbnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(rdoNghiviec)
                                        .addComponent(rdoLamviec))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoQuanly)
                                .addComponent(rdoNhanvien)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnext)
                    .addComponent(btnLast)
                    .addComponent(btnPrev)
                    .addComponent(btnStart))
                .addGap(79, 79, 79))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (checkRegex()) {
            return;
        } else {
            insert();
        }


    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (checkRegex()) {
            return;
        } else {
            this.update();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tbnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnLamMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
        TuDongHoa();
    }//GEN-LAST:event_tbnLamMoiActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        this.first();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblNhanVienhdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienhdMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblNhanVienhd.getSelectedRow();
            btnXoa.setEnabled(true);
            this.edit();
            txtTenNV.setEditable(false);
        }
    }//GEN-LAST:event_tblNhanVienhdMouseClicked

    private void tblNhanVienkhdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienkhdMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.row = tblNhanVienkhd.getSelectedRow();
            this.edit2();
            txtTenNV.setEditable(false);
        }
    }//GEN-LAST:event_tblNhanVienkhdMouseClicked

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            chonAnh();
        }
    }//GEN-LAST:event_lblHinhMouseClicked

    private void txtTenNVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenNVKeyReleased
        // TODO add your handling code here:
//        fillTableSearch(txtTenNV.getText());
//        updateStatus();
//        row = -1;
    }//GEN-LAST:event_txtTenNVKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnnext;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.toedter.calendar.JDateChooser jDateNgaysinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JRadioButton rdoLamviec;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNghiviec;
    private javax.swing.JRadioButton rdoNhanvien;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoQuanly;
    private javax.swing.JTable tblNhanVienhd;
    private javax.swing.JTable tblNhanVienkhd;
    private javax.swing.JButton tbnLamMoi;
    private javax.swing.JTextArea txtDiachi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatkhau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTaikhoan;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
void init() {

        if (jTabbedPane1.getSelectedIndex() == 0) {
            this.fillToTableNVHD();
            row = 0;
            this.updateStatus();
        }
        this.fillToTableNVKHD();
        clearForm();

    }

    Services.SerNhanVien inserts = new SerNhanVien();
    Services.SerNhanVien updates = new SerNhanVien();
    Services.SerNhanVien deletes = new SerNhanVien();

    void insert() {
        if (checkEmail() && checkLength() && checkSDT() && checkSame() && checkSameAccount()) {

            try {
                inserts.insert(getForm());
                this.fillToTableNVHD();//cái này nó liên quan toies GUI
                this.clearForm();
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
            } catch (Exception e) {//
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Thêm mới thất bại");

            }
        }
    }

    void update() {
        if (checkEmail() && checkLength() && checkSDT()) {

            try {
                updates.update(getForm());
                this.fillToTableNVHD();
                this.fillToTableNVKHD();
                JOptionPane.showMessageDialog(this, "Update thành công!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại!" + "\n" + "Vui lòng chọn dữ liệu ở mục danh sách để cập nhật");
                e.printStackTrace();
            }

        }
    }

    void update2() {
        try {
            updates.update(getForm());
            this.fillToTableNVKHD();
            JOptionPane.showMessageDialog(this, "Update thành công!!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại!" + "\n" + "Vui lòng chọn dữ liệu ở mục danh sách để cập nhật");
            e.printStackTrace();
        }
    }

    void delete() {
        int chooser = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa nhân viên?");
        if (!Auth.isManager()) {
            JOptionPane.showMessageDialog(this, "Bạn không có quyền xóa nhân viên!");
        } else if (chooser == JOptionPane.YES_OPTION) {
            try {
                String manv = txtMaNV.getText();
                dao.delete(manv);
                this.fillToTableNVHD();
                this.fillToTableNVKHD();
                this.clearForm();
                JOptionPane.showMessageDialog(this, "Xóa thành công!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
                e.printStackTrace();
            }
        }
    }

    void chonAnh() {

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            Ximage.save(file);
            ImageIcon icon = Ximage.read(file.getName());
            lblHinh.setIcon(icon);
            lblHinh.setToolTipText(file.getName());
        }
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVienhd.getModel();
        model.setRowCount(0);
        try {
            List<NhanVien> list = dao.selectAll();
            for (NhanVien nv : list) {
                model.addRow(new Object[]{
                    nv.getId_Nhanvien(),
                    nv.getTenNV(),
                    nv.isGender() ? "Nam" : "Nữ",
                    nv.getNgaysinh(),
                    nv.getDiaChi(),
                    nv.getSDT(),
                    nv.getEmail(),
                    nv.isVaiTro() ? "Quản lý" : "Nhân viên",
                    nv.getHinh()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    void edit() {
        String manv = (String) tblNhanVienhd.getValueAt(this.row, 0);
        NhanVien nv = dao.selectById(manv);
        this.setFrom(nv);
        jTabbedPane1.setSelectedIndex(0);
        this.updateStatus();
        tblNhanVienhd.setRowSelectionInterval(row, row);
    }

    void edit2() {

        String manv = (String) tblNhanVienkhd.getValueAt(this.row, 0);
        NhanVien nv = dao.selectById(manv);
        this.setFrom(nv);
        jTabbedPane1.setSelectedIndex(1);
        this.updateStatus2();
        tblNhanVienkhd.setRowSelectionInterval(row, row);
    }

    void setFrom(NhanVien nv) {
        txtMaNV.setText(nv.getId_Nhanvien());
        txtTenNV.setText(nv.getTenNV());
        rdoNam.setSelected(nv.isGender());
        rdoNu.setSelected(!nv.isGender());
        jDateNgaysinh.setDate(nv.getNgaysinh());
        txtEmail.setText(nv.getEmail());
        txtSDT.setText(nv.getSDT());
        txtDiachi.setText(nv.getDiaChi());
        txtTaikhoan.setText(nv.getUserName());
        txtMatkhau.setText(nv.getPass());
        rdoQuanly.setSelected(nv.isVaiTro());
        rdoNhanvien.setSelected(!nv.isVaiTro());
        rdoLamviec.setSelected(nv.isTrangThai());
        rdoNghiviec.setSelected(!nv.isTrangThai());
        if (nv.getHinh() != null) {
            lblHinh.setToolTipText(nv.getHinh());
            lblHinh.setIcon(Ximage.read(nv.getHinh()));
        }
    }
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

    public NhanVien getForm() {
        NhanVien nv = new NhanVien();
        nv.setId_Nhanvien(txtMaNV.getText());
        nv.setTenNV(txtTenNV.getText());
        nv.setGender(rdoNam.isSelected());
        //String ngaySinh = format.format(jDateNgaysinh.getDate());
        nv.setNgaysinh(Xdate.toDate(Xdate.toString(jDateNgaysinh.getDate(), "yyyy-MM-dd"), "yyyy-MM-dd"));
        nv.setEmail(txtEmail.getText());
        nv.setSDT(txtSDT.getText());
        nv.setDiaChi(txtDiachi.getText());
        nv.setUserName(txtTaikhoan.getText());
        nv.setPass(new String(txtMatkhau.getPassword()));//xong
        nv.setVaiTro(rdoQuanly.isSelected());
        nv.setTrangThai(rdoLamviec.isSelected());
        nv.setHinh(lblHinh.getToolTipText());
        return nv;
    }

    void clearForm() {// thằng này có thể để trong Sernhanvien
        NhanVien nv = new NhanVien();
        this.setFrom(nv);
        lblHinh.setIcon(null);
        this.row = -1;
        this.updateStatus();
    }

    void updateStatus() {
        boolean edit = this.row >= 0;
        boolean first = this.row == 0;
        boolean last = (this.row == tblNhanVienhd.getRowCount() - 1);
        txtMaNV.setEditable(false);
        txtTaikhoan.setEditable(!edit);
        txtTenNV.setEditable(true);
        txtEmail.setEditable(true);
        txtSDT.setEditable(true);
        txtDiachi.setEditable(true);
        txtMatkhau.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
    }

    void updateStatus2() {
        boolean edit = this.row >= 0;
        boolean first = this.row == 0;
        boolean last = (this.row == tblNhanVienkhd.getRowCount() - 1);
        txtMaNV.setEditable(!edit);
        txtTenNV.setEditable(!edit);
        txtEmail.setEditable(!edit);
        txtSDT.setEditable(!edit);
        txtDiachi.setEditable(!edit);
        txtTaikhoan.setEditable(!edit);
        txtMatkhau.setEditable(!edit);
        btnThem.setEnabled(false);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(false);
        tbnLamMoi.setEnabled(false);
        btnStart.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnnext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    void first() {

        if (jTabbedPane1.getSelectedIndex() == 0) {
            this.row = 0;
            this.edit();
        } else {
            this.row = 0;
            this.edit2();
        }

    }

    void next() {
        if (jTabbedPane1.getSelectedIndex() == 0) {
            if (this.row < tblNhanVienhd.getRowCount() - 1) {
                this.row++;
                this.edit();
            }
        } else {
            if (this.row < tblNhanVienkhd.getRowCount() - 1) {
                this.row++;
                this.edit2();
            }
        }
    }

    void prev() {
        if (jTabbedPane1.getSelectedIndex() == 0) {
            if (this.row > 0) {
                this.row--;
                this.edit();
            }
        } else {
            if (this.row > 0) {
                this.row--;
                this.edit2();
            }
        }

    }

    void last() {
        if (jTabbedPane1.getSelectedIndex() == 0) {
            this.row = tblNhanVienhd.getRowCount() - 1;
            this.edit();
        } else {
            this.row = tblNhanVienkhd.getRowCount() - 1;
            this.edit2();
        }

    }

    private void fillToTableNVHD() {
        List<NhanVien> list = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) tblNhanVienhd.getModel();
        model.setRowCount(0);
        try {
            list = dao.select_TrangThai2();
            for (NhanVien nv : list) {
                model.addRow(new Object[]{
                    nv.getId_Nhanvien(),
                    nv.getTenNV(),
                    nv.isGender() ? "Nam" : "Nữ",
                    nv.getNgaysinh(),
                    nv.getDiaChi(),
                    nv.getSDT(),
                    nv.getEmail(),
                    nv.isVaiTro() ? "Quản lý" : "Nhân viên",
                    nv.getHinh()
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillToTableNVKHD() {
        List<NhanVien> list = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) tblNhanVienkhd.getModel();
        model.setRowCount(0);
        try {
            list = dao.select_TrangThai1();
            for (NhanVien nv : list) {
                model.addRow(new Object[]{
                    nv.getId_Nhanvien(),
                    nv.getTenNV(),
                    nv.isGender() ? "Nam" : "Nữ",
                    nv.getNgaysinh(),
                    nv.getDiaChi(),
                    nv.getSDT(),
                    nv.getEmail(),
                    nv.isVaiTro() ? "Quản lý" : "Nhân viên",
                    nv.getHinh()
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean checkNull() {
        if (txtMaNV.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống mã nhân viên");
            return false;
        }
        if (txtTenNV.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống tên nhân viên");
            return false;
        }

        if (txtEmail.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống Email nhân viên");
            return false;
        }
        if (txtSDT.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống SĐT nhân viên");
            return false;
        }
        if (txtDiachi.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống địa chỉ");
            return false;
        }
        if (txtTaikhoan.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống tài khoản");
            return false;
        }
        if (txtMatkhau.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Không được để trống mật khẩu");
            return false;
        }
        return true;
    }

    private boolean checkSDT() {
        try {

            String dth = txtSDT.getText();
            String check = "\\d{10,11}";
            if (!dth.matches(check)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải từ 10 đến 12 số");
                return false;
            } else {
                return true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số");
            return false;
        }
    }

    public boolean checkRegex() {
        Pattern regex = Pattern.compile("^[a-zA-Z_ÀÁÂÃÈÉÊẾÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêếìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\ ]+$");
        Pattern regex2 = Pattern.compile("[a-zA-Z]");
        Pattern regex3 = Pattern.compile("[^0-9]");

        if (!regex.matcher(txtTenNV.getText().trim()).find()) {
            JOptionPane.showMessageDialog(this, "Tên chứa ký tự đặc biệt, vui lòng xem lại!");
            txtTenNV.requestFocus();
            return true;
        }
//        if(regex.matcher(txtTaikhoan.getText()).find()){
//            JOptionPane.showMessageDialog(this, "Tài khoản chứa ký tự đặc biệt, vui lòng xem lại!");
//            txtTaikhoan.requestFocus();
//            return true;
//        }
        if (regex2.matcher(txtSDT.getText()).find()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại chỉ nhận giá trị số!");
            txtSDT.requestFocus();
            return true;
        }
        if (txtTaikhoan.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Tài khoản không được bỏ trống!");
            txtTaikhoan.requestFocus();
            return true;
        }
        if (Pattern.compile("[^a-zA-Z0-9]").matcher(txtTaikhoan.getText().trim()).find()) {
            JOptionPane.showMessageDialog(this, "Tài khoản chứa ký tự đặc biệt, vui lòng xem lại!");
            txtTaikhoan.requestFocus();
            return true;
        }
        if (jDateNgaysinh.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được để trống !");
            return true;
        }
        if (txtMatkhau.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Mật khẩu không được bỏ trống!");
            txtMatkhau.requestFocus();
            return true;
        }
        if (Pattern.compile("[^a-zA-Z0-9]").matcher(txtMatkhau.getText().trim()).find()) {
            JOptionPane.showMessageDialog(this, "Mật khẩu chứa ký tự đặc biệt, vui lòng xem lại!");
            txtMatkhau.requestFocus();
            return true;
        }
        return false;
    }

    public boolean checkEmail() {
        String id = txtEmail.getText();
        String rgx = "^[a-zA-Z][a-zA-Z0-9_\\.]{2,32}@[a-zA-Z0-9]{2,10}(\\.[a-zA-Z0-9]{2,4}){1,2}$";
        if (id.matches(rgx)) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Email không đúng định dạng");
            return false;
        }
    }

    private boolean checkSame() {
        if (dao.selectById(txtMaNV.getText()) == null) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Trùng mã nhân viên");
            return false;
        }
    }

    private boolean checkSameAccount() {
        if (dao.selectByAccount(txtTaikhoan.getText()) == null) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Trùng tài khoản nhân viên");
            return false;
        }
    }

    private boolean checkLength() {
        if (txtTaikhoan.getText().length() < 5 && txtTaikhoan.getText().length() > 50) {
            JOptionPane.showMessageDialog(this, "Tài khoản phải từ 5 ký tự tối đa 50 ký tự");
            return false;
        }
        if (txtTenNV.getText().length() < 5) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên phải tối đa 5 ký tự");
            return false;
        }
        return true;
    }

    public void fillTableSearch(String nhanVien) {
        DefaultTableModel model = (DefaultTableModel) tblNhanVienhd.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTenNV.getText();
            List<NhanVien> list = dao.selectByKeyword(keyword);
            for (NhanVien nv : list) {
                model.addRow(new Object[]{
                    nv.getId_Nhanvien(),
                    nv.getTenNV(),
                    nv.isGender() ? "Nam" : "Nữ",
                    nv.getNgaysinh(),
                    nv.getDiaChi(),
                    nv.getSDT(),
                    nv.getEmail(),
                    nv.isVaiTro() ? "Quản lý" : "Nhân viên",
                    nv.getHinh()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    void TuDongHoa() {
        if (dao.selectALLL().isEmpty()) {
            txtMaNV.setText("NV01");

        } else {
            txtMaNV.setText("NV" + (dao.select_Max_id_java() + 1));
        }
    }
}
